name: Lint
on:
  # Runs on all PRs
  pull_request:
  # Manual Dispatch
  workflow_dispatch:
  # Runs on pushes to test/ branches and main
  push:
    branches:
      - 'main'
      - 'test/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
    
jobs:
  lint_python:
    name: Lint Python Code

    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v5
      - name: Install Requirements
        run: |
          python3 -m venv .venv
          . .venv/bin/activate
          python3 -m pip install --upgrade pip
          python3 -m pip install .[lint]
      - name: Lint with Flake8
        run: |
          . .venv/bin/activate
          flake8 --statistics .

  lint_tcl:
    name: Lint TCL Code

    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v5
      - name: Install Requirements
        run: |
          python3 -m venv .venv
          . .venv/bin/activate
          python3 -m pip install --upgrade pip
          python3 -m pip install .[lint]
      - name: Lint with tclint
        run: |
          . .venv/bin/activate
          tclfmt --check .
          tclint .

  spelling:
    name: Check spelling
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v5

      - name: Check spelling
        run: |
          python3 -m venv .venv
          . .venv/bin/activate
          python3 -m pip install --upgrade pip
          python3 -m pip install .[lint]
          rm -rf build
          codespell

  sc_version:
    name: Get SiliconCompiler version
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.sc_version.outputs.version }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v5

      - name: Install gallery
        run: |
          python3 -m venv .venv
          . .venv/bin/activate
          pip3 install --upgrade pip
          pip3 install .

      - name: Get version
        id: sc_version
        run: |
          . .venv/bin/activate
          echo "version=v$(python3 -c "import siliconcompiler;print(siliconcompiler.__version__)")" >> $GITHUB_OUTPUT

  docker_image:
    needs: sc_version
    name: Get tools image
    permissions:
      contents: write
      packages: read
    uses: siliconcompiler/siliconcompiler/.github/workflows/docker_image.yml@main
    with:
      sc_version: ${{ needs.sc_version.outputs.version }}

  lint_RTL:
    needs: docker_image
    name: Check RTL

    runs-on: ubuntu-latest
    container:
      image: ${{ needs.docker_image.outputs.sc_tool }}

    strategy:
      fail-fast: false
      matrix:
        tool: ['verilator', 'slang']

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v5

      - name: Install gallery
        run: |
          python3 -m venv .venv
          . .venv/bin/activate
          pip3 install --upgrade pip
          pip3 install .

      - name: Run lint
        run: |
          . .venv/bin/activate
          mkdir lint
          cd lint
          sc-gallery -lint -lint_tool ${{ matrix.tool }}
