on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * *'

name: 'All Designs'

defaults:
  run:
    shell: bash

env:
  REGISTRY: ghcr.io

jobs:
  docker_image:
    name: 'Get docker sc_tools image'
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: read

    outputs:
      sc_tools: ${{ steps.docker.outputs.sc_tools }}

    steps:
      - name: Checkout repository main
        uses: actions/checkout@v3
        with:
          repository: siliconcompiler/siliconcompiler
          path: sc

      - name: Get image name
        id: docker
        run: |
          pip install -r sc/setup/docker/requirements.txt
          sc_tools_name=$(python3 sc/setup/docker/builder.py --tool tools --registry ${{ env.REGISTRY }})
          echo "sc_tools=${sc_tools_name}" >> $GITHUB_OUTPUT

  designs:
    name: 'Get design matrix'
    runs-on: ubuntu-latest

    outputs:
      designs: ${{ steps.designs.outputs.designs }}

    steps:
      - name: Checkout repository main
        uses: actions/checkout@v3

      - name: Get image name
        id: designs
        run: |
          python3 -m venv clean_env
          source clean_env/bin/activate

          python3 -m pip install --upgrade pip
          python3 -m pip install -e $GITHUB_WORKSPACE/.

          python3 -m scgallery -json designs.json
          echo "designs=$(cat designs.json)" >> $GITHUB_OUTPUT

  daily_tests_job:
    needs: [docker_image, designs]
    timeout-minutes: 60
    runs-on: ubuntu-latest
    container:
      image: ${{ needs.docker_image.outputs.sc_tools }}
      credentials:
        username: ${{ secrets.PACKAGES_ACTOR }}
        password: ${{ secrets.PACKAGES_TOKEN }}

        
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.designs.outputs.designs) }}

    name: 'Run design'
    steps:
      - name: Checkout SC Gallery
        uses: actions/checkout@v3
        with:
          path: scgallery
          submodules: true

      - name: Checkout SiliconCompiler
        uses: actions/checkout@v3
        with:
          repository: siliconcompiler/siliconcompiler
          path: siliconcompiler

      - name: Run gallery
        run: |
          python3 -m venv clean_env
          source clean_env/bin/activate

          python3 -m pip install --upgrade pip
          python3 -m pip install -e $GITHUB_WORKSPACE/scgallery/.

          export SCPATH=$GITHUB_WORKSPACE/siliconcompiler/siliconcompiler

          python3 -m scgallery -design ${{ matrix.design }}) -target ${{ matrix.target }} -gallery $GITHUB_WORKSPACE/gallery

      - name: Upload gallery artifacts
        uses: actions/upload-artifact@v3
        with:
          name: gallery
          path: gallery/
          retention-days: 1
